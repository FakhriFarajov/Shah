<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Request/AddressRequestDto.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Request/AddressRequestDto.cs" />
              <option name="originalContent" value="namespace ShahBuyerAuthApi.Contracts.DTOs.Request;&#10;&#10;public class AddressRequestDto&#10;{&#10;    public string Street { get; set; }&#10;    public string City { get; set; }&#10;    public string State { get; set; }&#10;    public string PostalCode { get; set; }&#10;    public Country Country { get; set; } // Changed from int to Country enum&#10;}" />
              <option name="updatedContent" value="using ShahBuyerAuthApi.Data.Enums;&#10;&#10;namespace ShahBuyerAuthApi.Contracts.DTOs.Request;&#10;&#10;public class AddressRequestDto&#10;{&#10;    public string Street { get; set; }&#10;    public string City { get; set; }&#10;    public string State { get; set; }&#10;    public string PostalCode { get; set; }&#10;    public Country Country { get; set; } // Changed from int to Country enum&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Request/BuyerProfileUpdateDto.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Request/BuyerProfileUpdateDto.cs" />
              <option name="originalContent" value="using ShahBuyerAuthApi.Contracts.DTOs.Request;&#10;using ShahBuyerAuthApi.Data.Enums;&#10;&#10;namespace ShahBuyerAuthApi.Contracts.DTOs.Request&#10;{&#10;    public class BuyerProfileUpdateDto&#10;    {&#10;        public string UserId { get; set; }&#10;        public string Name { get; set; }&#10;        public string Surname { get; set; }&#10;        public string Phone { get; set; }&#10;        public Country Country { get; set; }&#10;        public AddressRequestDto Address { get; set; }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="using ShahBuyerAuthApi.Contracts.DTOs.Request;&#10;using ShahBuyerAuthApi.Data.Enums;&#10;&#10;namespace ShahBuyerAuthApi.Contracts.DTOs.Request&#10;{&#10;    public class BuyerProfileUpdateDto&#10;    {&#10;        public string? UserId { get; set; }&#10;        public string? Name { get; set; }&#10;        public string? Surname { get; set; }&#10;        public string? Phone { get; set; }&#10;        public Country? Country { get; set; }&#10;        public AddressRequestDto? Address { get; set; }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Request/ResetPasswordRequestDTO.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Request/ResetPasswordRequestDTO.cs" />
              <option name="updatedContent" value="namespace ShahBuyerAuthApi.Contracts.DTOs.Request;&#10;    public string NewPassword { get; set; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Request/UpdateAddressRequestDTO.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Request/UpdateAddressRequestDTO.cs" />
              <option name="updatedContent" value="namespace ShahBuyerAuthApi.Contracts.DTOs.Request;&#10;&#10;public class UpdateAddressRequestDTO&#10;{&#10;    public string? Street { get; set; }&#10;    public string? City { get; set; }&#10;    public string? State { get; set; }&#10;    public string? PostalCode { get; set; }&#10;    public int? CountryCode { get; set; }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Response/AddressResponseDTO.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Response/AddressResponseDTO.cs" />
              <option name="updatedContent" value="namespace ShahBuyerAuthApi.Contracts.DTOs.Response;&#10;&#10;public class AddressResponseDTO&#10;{&#10;    public string Id { get; set; }&#10;    public string Street { get; set; }&#10;    public string City { get; set; }&#10;    public string State { get; set; }&#10;    public string PostalCode { get; set; }&#10;    public int Country { get; set; }&#10;    public string BuyerProfileId { get; set; }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Response/BuyerProfileResponseDTO.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Contracts/DTOs/Response/BuyerProfileResponseDTO.cs" />
              <option name="updatedContent" value="namespace ShahBuyerAuthApi.Contracts.DTOs.Response;&#10;&#10;public class BuyerProfileResponseDTO&#10;{&#10;    public string UserId { get; set; }&#10;    public string Name { get; set; }&#10;    public string Surname { get; set; }&#10;    public string Phone { get; set; }&#10;    public AddressResponseDTO Address { get; set; }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Data/Enums/CountryCode.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Data/Enums/CountryCode.cs" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="namespace ShahBuyerAuthApi.Data.Enums&#10;{&#10;    public enum CountryCode&#10;    {&#10;        Unknown = 0,&#10;        AZ = 1,&#10;        TR = 2,&#10;        US = 3,&#10;        UK = 4,&#10;        DE = 5,&#10;        FR = 6,&#10;        RU = 7,&#10;        CN = 8,&#10;        IN = 9,&#10;        Other = 99&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Data/NewDirectory1/Role.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Data/NewDirectory1/Role.cs" />
              <option name="updatedContent" value="using System.Collections.Generic;&#10;&#10;namespace ShahBuyerAuthApi.Data.Models&#10;{&#10;    public class Role&#10;    {&#10;        public string Id { get; set; } = Guid.NewGuid().ToString();&#10;        public string RoleName { get; set; }&#10;        public ICollection&lt;UserRole&gt; UserRoles { get; set; } = new List&lt;UserRole&gt;();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerAuthApi.Data/NewDirectory1/UserRole.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerAuthApi.Data/NewDirectory1/UserRole.cs" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="namespace ShahBuyerAuthApi.Data.Models&#10;{&#10;    public class UserRole&#10;    {&#10;        public string UserId { get; set; }&#10;        public User User { get; set; }&#10;        public string RoleId { get; set; }&#10;        public Role Role { get; set; }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerFeaturesApi.Application/Services/Interfaces/ICartItemService.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerFeaturesApi.Application/Services/Interfaces/ICartItemService.cs" />
              <option name="originalContent" value="using System.Threading.Tasks;&#10;using ShahBuyerFeaturesApi.Contracts.DTOs.Request;&#10;using ShahBuyerFeaturesApi.Contracts.DTOs.Response;&#10;using ShahBuyerFeaturesApi.Data.Models;&#10;&#10;namespace ShahBuyerFeaturesApi.Application.Services.Interfaces&#10;{&#10;    public interface ICartItemService&#10;    {&#10;        Task AddToCart(string productId);&#10;        Task DeleteFromCart(string productId);&#10;        Task&lt;TypedResult&lt;object&gt;&gt; GetAllCartItems();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="using System.Threading.Tasks;&#10;using ShahBuyerFeaturesApi.Contracts.DTOs.Request;&#10;using ShahBuyerFeaturesApi.Contracts.DTOs.Response;&#10;using ShahBuyerFeaturesApi.Data.Models;&#10;&#10;namespace ShahBuyerFeaturesApi.Application.Services.Interfaces&#10;{&#10;    public interface ICartItemService&#10;    {&#10;        Task AddToCart(string productId);&#10;        Task DeleteFromCart(string productId);&#10;        Task&lt;TypedResult&lt;object&gt;&gt; GetAllCartItems();&#10;        Task IncreaseQuantity(string productId);&#10;        Task DecreaseQuantity(string productId);&#10;        Task DeleteAllCartItems();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahBuyerFeaturesApi.Infrastructure/Contexts/DbContextSampleDataSeeder.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahBuyerFeaturesApi.Infrastructure/Contexts/DbContextSampleDataSeeder.cs" />
              <option name="updatedContent" value="using System;&#10;using System.Collections.Generic;&#10;using System.Linq;&#10;using ShahBuyerFeaturesApi.Data.Models;&#10;&#10;namespace ShahBuyerFeaturesApi.Infrastructure.Contexts&#10;{&#10;    public static class DbContextSampleDataSeeder&#10;    {&#10;        public static void SeedSampleData(this ShahDbContext context)&#10;        {&#10;            if (context.BuyerProfiles.Any() || context.Products.Any())&#10;                return; // Already seeded&#10;&#10;            // Categories&#10;            var rootCategory = new Category { CategoryName = &quot;Clothing&quot; };&#10;            var subCategory = new Category { CategoryName = &quot;T-Shirts&quot;, ParentCategory = rootCategory };&#10;            context.Categories.AddRange(rootCategory, subCategory);&#10;&#10;            // Attributes&#10;            var sizeAttr = new ProductAttribute { Name = &quot;Size&quot; };&#10;            var colorAttr = new ProductAttribute { Name = &quot;Color&quot; };&#10;            context.ProductAttributes.AddRange(sizeAttr, colorAttr);&#10;&#10;            // Attribute Values&#10;            var small = new ProductAttributeValue { Value = &quot;Small&quot;, ProductAttribute = sizeAttr };&#10;            var medium = new ProductAttributeValue { Value = &quot;Medium&quot;, ProductAttribute = sizeAttr };&#10;            var white = new ProductAttributeValue { Value = &quot;White&quot;, ProductAttribute = colorAttr };&#10;            var green = new ProductAttributeValue { Value = &quot;Green&quot;, ProductAttribute = colorAttr };&#10;            context.ProductAttributeValues.AddRange(small, medium, white, green);&#10;&#10;            // Store&#10;            var store = new StoreInfo { StoreName = &quot;Best Store&quot; };&#10;            context.StoreInfos.Add(store);&#10;&#10;            // Product Details&#10;            var prodDetails = new ProductDetails { Title = &quot;Cool T-Shirt&quot;, Description = &quot;A very cool t-shirt.&quot; };&#10;            context.ProductDetails.Add(prodDetails);&#10;&#10;            // Product&#10;            var product = new Product&#10;            {&#10;                ProductDetails = prodDetails,&#10;                Category = subCategory,&#10;                StoreInfo = store&#10;            };&#10;            context.Products.Add(product);&#10;&#10;            // Product Variants&#10;            var variant1 = new ProductVariant { Product = product, Price = 19.99m, Stock = 10 };&#10;            var variant2 = new ProductVariant { Product = product, Price = 21.99m, Stock = 5 };&#10;            context.ProductVariants.AddRange(variant1, variant2);&#10;&#10;            // Variant Attribute Values&#10;            context.ProductVariantAttributeValues.AddRange(&#10;                new ProductVariantAttributeValue { ProductVariant = variant1, ProductAttributeValue = small },&#10;                new ProductVariantAttributeValue { ProductVariant = variant1, ProductAttributeValue = white },&#10;                new ProductVariantAttributeValue { ProductVariant = variant2, ProductAttributeValue = medium },&#10;                new ProductVariantAttributeValue { ProductVariant = variant2, ProductAttributeValue = green }&#10;            );&#10;&#10;            // Buyer&#10;            var buyer = new BuyerProfile { Name = &quot;John Doe&quot; };&#10;            context.BuyerProfiles.Add(buyer);&#10;&#10;            // Cart Item&#10;            context.CartItems.Add(new CartItem { BuyerProfile = buyer, Product = product, ProductVariant = variant1, Quantity = 2 });&#10;&#10;            // Favorite&#10;            context.Favorites.Add(new Favorite { BuyerProfile = buyer, Product = product });&#10;&#10;            // Review&#10;            context.Reviews.Add(new Review { Product = product, BuyerProfile = buyer, Rating = 5, Comment = &quot;Great!&quot; });&#10;&#10;            // Order Payment&#10;            context.OrderPayments.Add(new OrderPayment { BuyerProfile = buyer, TotalAmount = 39.98m, Currency = &quot;USD&quot;, Method = &quot;Card&quot;, Status = &quot;Paid&quot; });&#10;&#10;            context.SaveChanges();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/ShahSellerAuthApi.Presentation/Controllers/SampleController.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/ShahSellerAuthApi.Presentation/Controllers/SampleController.cs" />
              <option name="updatedContent" value="using Microsoft.AspNetCore.Mvc;&#10;&#10;namespace ShahSellerAuthApi.Presentation.Controllers&#10;{&#10;    [ApiController]&#10;    [Route(&quot;api/[controller]&quot;)]&#10;    public class SampleController : ControllerBase&#10;    {&#10;        [HttpGet]&#10;        public IActionResult Get() =&gt; Ok(&quot;ShahSellerAuthApi is running!&quot;);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>